plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'nu.studer.jooq' version '9.0'   // jOOQ plugin
}

group = 'com.villlo'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(24)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // MySQL Driver (runtime)
    runtimeOnly 'com.mysql:mysql-connector-j'

    // jOOQ runtime
    implementation 'org.jooq:jooq:3.19.25'

    // jOOQ codegen dependencies
    jooqGenerator 'org.jooq:jooq-codegen:3.19.25'
    jooqGenerator 'com.mysql:mysql-connector-j:8.1.0'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.twilio.sdk:twilio:10.6.5'
    implementation("org.springframework.boot:spring-boot-starter-web")



}

// ✅ jOOQ code generation configuration
jooq {
    version = '3.19.25'  // match runtime & codegen
    configurations {
        main {
            generationTool {
                logging = org.jooq.meta.jaxb.Logging.WARN
                jdbc {
                    driver = 'com.mysql.cj.jdbc.Driver'
                    url = 'jdbc:mysql://localhost:3306/villo_db'
                    user = 'root'
                    password = 'Ansh@2020'
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = 'org.jooq.meta.mysql.MySQLDatabase'
                        inputSchema = 'villo_db'
                    }
                    target {
                        packageName = 'com.villlo.villo.jooq'
                        directory = "$buildDir/generated-src/jooq/main"
                    }
                }
            }
        }
    }
}

// ✅ Include generated sources in project
sourceSets {
    main {
        java {
            srcDir "$buildDir/generated-src/jooq/main"
        }
    }
}

// ✅ Ensure JOOQ code is generated before compiling
tasks.named('compileJava') {
    dependsOn tasks.named('generateJooq')
}

// ✅ Optional: enable JUnit platform
tasks.named('test') {
    useJUnitPlatform()
}
